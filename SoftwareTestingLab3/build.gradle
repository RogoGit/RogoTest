buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.2.12')
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

apply plugin: 'net.serenity-bdd.aggregator'

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.13.5'
    fluentleniumVersion = '4.3.1'
    junitVersion = '5.6.2'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation('org.seleniumhq.selenium:selenium-java:3.141.59')
    implementation('com.codeborne:selenide:5.14.0')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    implementation('net.serenity-bdd:serenity-core:2.2.12')
    testImplementation('net.serenity-bdd:serenity-junit:2.2.12')
    implementation("org.fluentlenium:fluentlenium-core:${fluentleniumVersion}")
    testImplementation("org.fluentlenium:fluentlenium-assertj:${fluentleniumVersion}")
    testImplementation("org.fluentlenium:fluentlenium-junit-jupiter:${fluentleniumVersion}")
    implementation('com.epam.jdi:jdi-light-html:1.2.16')
    implementation('io.github.bonigarcia:webdrivermanager:4.1.0')
    testImplementation('org.assertj:assertj-core:3.16.1')
    testImplementation('org.slf4j:slf4j-simple:1.7.29')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}